<?xml version="1.0"?>
<ruleset name="AcmeProject">
    <rule ref="vendor/squizlabs/php_codesniffer/src/Standards/PSR2/ruleset.xml" />

    <config name="installed_paths" value="../../slevomat/coding-standard"/>

    <file>./src/</file>
    <exclude-pattern>./src/Migrations/*</exclude-pattern>
    <exclude-pattern>./src/MigrationsPG/*</exclude-pattern>

    <arg name="cache" value=".phpcs-cache"/>
    <arg name="extensions" value="php"/>
    <arg name="colors"/>
    <arg value="ns"/>

    <rule ref="PSR1.Methods.CamelCapsMethodName">
        <exclude-pattern>./src/**/Test/*</exclude-pattern>
    </rule>

    <!-- Generic coding standards -->
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.LowerCaseKeyword"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="PEAR.Classes.ClassDeclaration"/>
    <rule ref="PEAR.Functions.FunctionDeclaration"/>
    <rule ref="PSR1.Methods.CamelCapsMethodName"/>
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
    <rule ref="PSR2.ControlStructures.SwitchDeclaration"/>
    <rule ref="PSR2.Classes.PropertyDeclaration.SpacingAfterType"/>
    <rule ref="PSR2.Methods.FunctionClosingBrace"/>
    <rule ref="PSR2.Methods.MethodDeclaration"/>
    <rule ref="PSR2.Namespaces.UseDeclaration"/>

    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="indent" value="4"/>
        </properties>
    </rule>

    <!-- Arrays -->
    <rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation"/>
    <rule ref="SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace"/>
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>

    <!-- Classes -->
    <rule ref="SlevomatCodingStandard.Classes.BackedEnumTypeSpacing">
        <properties>
            <property name="spacesCountBeforeColon" value="0" />
            <property name="spacesCountBeforeType" value="1" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility"/>
    <rule ref="SlevomatCodingStandard.Classes.ClassMemberSpacing"/>
    <rule ref="SlevomatCodingStandard.Classes.ClassStructure">
        <properties>
            <property name="groups" type="array">
                <element value="uses"/>
                <element value="enum cases"/>
                <element value="public constants"/>
                <element value="protected constants"/>
                <element value="private constants"/>
                <element value="public properties"/>
                <element value="public static properties"/>
                <element value="protected properties"/>
                <element value="protected static properties"/>
                <element value="private properties"/>
                <element value="private static properties"/>
                <element value="public abstract methods, public static abstract methods"/>
                <element value="protected abstract methods, protected static abstract methods"/>
                <element value="constructor"/>
                <element value="static constructors"/>
                <element value="destructor"/>
                <element value="magic methods"/>
                <element value="final methods"/>
                <element value="public methods"/>
                <element value="public static methods"/>
                <element value="protected methods"/>
                <element value="protected static methods"/>
                <element value="private methods"/>
                <element value="private static methods"/>
            </property>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.ConstantSpacing"/>
    <rule ref="SlevomatCodingStandard.Classes.DisallowLateStaticBindingForConstants"/>
    <rule ref="SlevomatCodingStandard.Classes.EmptyLinesAroundClassBraces">
        <properties>
            <property name="linesCountAfterOpeningBrace" value="0"/>
            <property name="linesCountBeforeClosingBrace" value="0"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Classes.MethodSpacing"/>
    <rule ref="SlevomatCodingStandard.Classes.PropertyDeclaration"/>
    <rule ref="SlevomatCodingStandard.Classes.PropertySpacing"/>
    <!--    <rule ref="SlevomatCodingStandard.Classes.TraitUseSpacing">-->
    <!--        <properties>-->
    <!--            <property name="linesCountBeforeFirstUse" value="0"/>-->
    <!--            <property name="linesCountAfterLastUse" value="1"/>-->
    <!--        </properties>-->
    <!--    </rule>-->
    <rule ref="SlevomatCodingStandard.Classes.UselessLateStaticBinding"/>

    <!-- Commenting -->
    <rule ref="SlevomatCodingStandard.Commenting.EmptyComment"/>
    <rule ref="SlevomatCodingStandard.Commenting.InlineDocCommentDeclaration"/>
    <rule ref="SlevomatCodingStandard.Commenting.RequireOneLinePropertyDocComment"/>

    <!-- Control Structures -->
    <!--    <rule ref="SlevomatCodingStandard.ControlStructures.JumpStatementsSpacing">-->
    <!--        <properties>-->
    <!--            <property name="jumpStatements" type="array">-->
    <!--                <element value="return"/>-->
    <!--            </property>-->
    <!--        </properties>-->
    <!--    </rule>-->

    <rule ref="SlevomatCodingStandard.ControlStructures.AssignmentInCondition"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowEmpty"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowShortTernaryOperator"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.LanguageConstructWithParentheses"/>
    <!--<rule ref="SlevomatCodingStandard.ControlStructures.NewWithoutParentheses"/>-->
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceOperator"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.UselessTernaryOperator"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireShortTernaryOperator"/>
    <!--<rule ref="SlevomatCodingStandard.ControlStructures.RequireTernaryOperator"/>-->

    <!-- Exceptions -->
    <rule ref="SlevomatCodingStandard.Exceptions.DeadCatch"/>
    <rule ref="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly"/>

    <!-- Files -->
    <rule ref="SlevomatCodingStandard.Files.TypeNameMatchesFileName">
        <properties>
            <property name="rootNamespaces" type="array">
                <element key="src" value="App"/>
                <element key="src/ForCamping" value="ForCamping"/>
            </property>
        </properties>
    </rule>

    <!-- Functions -->
    <rule ref="SlevomatCodingStandard.Functions.ArrowFunctionDeclaration">
        <properties>
            <property name="spacesCountAfterKeyword" value="0"/>
            <property name="spacesCountBeforeArrow" value="1"/>
            <property name="spacesCountAfterArrow" value="1"/>
            <property name="allowMultiLine" value="0"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Functions.UnusedInheritedVariablePassedToClosure" />
    <rule ref="SlevomatCodingStandard.Functions.UselessParameterDefaultValue" />
    <rule ref="SlevomatCodingStandard.Functions.RequireTrailingCommaInCall"/>
    <rule ref="SlevomatCodingStandard.Functions.RequireTrailingCommaInDeclaration"/>

    <!-- Namespaces -->
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceSpacing">
        <properties>
            <property name="linesCountBeforeNamespace" value="1"/>
            <property name="linesCountAfterNamespace" value="1"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" type="bool" value="true"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UseFromSameNamespace" />
    <rule ref="SlevomatCodingStandard.Namespaces.UselessAlias" />

    <!-- Operators -->
    <rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators"/>
    <rule ref="SlevomatCodingStandard.Operators.NegationOperatorSpacing">
        <properties>
            <property name="spacesCount" value="0"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Operators.RequireCombinedAssignmentOperator"/>
    <rule ref="SlevomatCodingStandard.Operators.RequireOnlyStandaloneIncrementAndDecrementOperators"/>
    <rule ref="SlevomatCodingStandard.Operators.SpreadOperatorSpacing"/>

    <!-- PHP -->
    <!--    <rule ref="SlevomatCodingStandard.PHP.DisallowReference" />-->
    <rule ref="SlevomatCodingStandard.PHP.ForbiddenClasses" />
    <rule ref="SlevomatCodingStandard.PHP.OptimizedFunctionsWithoutUnpacking"/>
    <rule ref="SlevomatCodingStandard.PHP.ReferenceSpacing">
        <properties>
            <property name="spacesCountAfterReference" value="0"/>
        </properties>
    </rule>
    <!--    <rule ref="SlevomatCodingStandard.PHP.RequireExplicitAssertion" />-->
    <rule ref="SlevomatCodingStandard.PHP.RequireNowdoc" />
    <rule ref="SlevomatCodingStandard.PHP.ShortList"/>
    <rule ref="SlevomatCodingStandard.PHP.TypeCast"/>
    <rule ref="SlevomatCodingStandard.PHP.UselessParentheses"/>
    <rule ref="SlevomatCodingStandard.PHP.UselessSemicolon"/>

    <!-- Type hints -->
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="declareOnFirstLine" value="0"/>
            <property name="linesCountBeforeDeclare" value="1" />
            <property name="linesCountAfterDeclare" value="1"/>
            <property name="spacesCountAroundEqualsSign" value="0" />
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.NullTypeHintOnLastPosition"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>
    <rule ref="SlevomatCodingStandard.TypeHints.UselessConstantTypeHint"/>
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue"/>
    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints"/>
    <rule ref="SlevomatCodingStandard.TypeHints.DisallowArrayTypeHintSyntax"/>
<!--    <rule ref="SlevomatCodingStandard.TypeHints.DisallowMixedTypeHint"/>-->

    <!-- Variables -->
    <rule ref="SlevomatCodingStandard.Variables.DisallowSuperGlobalVariable" />
    <rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable" />
    <rule ref="SlevomatCodingStandard.Variables.UselessVariable" />

    <!--  Whitespaces  -->
    <rule ref="SlevomatCodingStandard.Whitespaces.DuplicateSpaces"/>

    <!--  Squiz  -->
<!--    <rule ref="Squiz.Operators.ComparisonOperatorUsage">-->
<!--        <exclude name="Squiz.Operators.ComparisonOperatorUsage.ImplicitTrue"/>-->
<!--    </rule>-->

    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.Strings.DoubleQuoteUsage"/>
    <rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
        <message>Variable "%s" not allowed in double-quoted string; use sprintf() instead!</message>
    </rule>

    <rule ref="Squiz.Classes.SelfMemberReference"/>
    <rule ref="Squiz.Classes.ValidClassName"/>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.Functions.FunctionDeclaration"/>
    <rule ref="Squiz.Functions.GlobalFunction"/>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration">
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.NewlineBeforeOpenBrace"/>
    </rule>
<!--    <rule ref="Squiz.Operators.IncrementDecrementUsage">-->
<!--        <exclude name="Squiz.Operators.IncrementDecrementUsage.NoBrackets"/>-->
<!--    </rule>-->
    <rule ref="Squiz.Operators.ValidLogicalOperators"/>
    <rule ref="Squiz.PHP.CommentedOutCode">
        <properties>
            <property name="maxPercentage" value="50"/>
        </properties>
    </rule>
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.Heredoc"/>
    <rule ref="Squiz.PHP.InnerFunctions"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
            <property name="spacing" value="1"/>
        </properties>
    </rule>
    <rule ref="Squiz.Strings.EchoedStrings"/>
    <rule ref="Squiz.WhiteSpace.CastSpacing"/>
    <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
</ruleset>
